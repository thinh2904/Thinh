[{"op":"core/column-addition","description":"Create column MAPBLOCKLO at index 2 based on column BlockLot using expression grel:replace(value,\" \",\"\")","engineConfig":{"facets":[],"mode":"row-based"},"newColumnName":"MAPBLOCKLO","columnInsertIndex":2,"baseColumnName":"BlockLot","expression":"grel:replace(value,\" \",\"\")","onError":"set-to-blank"},{"op":"core/text-transform","description":"Text transform on cells in column MAPBLOCKLO using expression grel:if(length(splitByCharType(value))==3,splitByCharType(value)[0]+\"-\"+splitByCharType(value)[1]+\"-\"+splitByCharType(value)[2],splitByCharType(value)[0]+\"-\"+splitByCharType(value)[1]+\"-\"+splitByCharType(value)[2]+\"-\"+splitByCharType(value)[3])","engineConfig":{"facets":[],"mode":"row-based"},"columnName":"MAPBLOCKLO","expression":"grel:if(length(splitByCharType(value))==3,splitByCharType(value)[0]+\"-\"+splitByCharType(value)[1]+\"-\"+splitByCharType(value)[2],splitByCharType(value)[0]+\"-\"+splitByCharType(value)[1]+\"-\"+splitByCharType(value)[2]+\"-\"+splitByCharType(value)[3])","onError":"keep-original","repeat":false,"repeatCount":10},{"op":"core/text-transform","description":"Text transform on cells in column MAPBLOCKLO using expression grel:substring(value,0,lastIndexOf(value,\"-\"))+splitByLengths(substring(value,lastIndexOf(value,\"-\")),4,1)[0]+\"-\"+splitByLengths(substring(value,lastIndexOf(value,\"-\")),4,1)[1]","engineConfig":{"facets":[{"invert":false,"expression":"grel:length(substring(value,lastIndexOf(value,\"-\")))","selectError":false,"omitError":false,"selectBlank":false,"name":"MAPBLOCKLO","omitBlank":false,"columnName":"MAPBLOCKLO","type":"list","selection":[{"v":{"v":5,"l":"5"}}]}],"mode":"row-based"},"columnName":"MAPBLOCKLO","expression":"grel:substring(value,0,lastIndexOf(value,\"-\"))+splitByLengths(substring(value,lastIndexOf(value,\"-\")),4,1)[0]+\"-\"+splitByLengths(substring(value,lastIndexOf(value,\"-\")),4,1)[1]","onError":"keep-original","repeat":false,"repeatCount":10},{"op":"core/column-addition","description":"Create column longitude at index 3 based on column MAPBLOCKLO using expression grel:cell.cross(\"allegheny_county_parcel_centroids csv\", \"MAPBLOCKLO\")[0].cells[\"longitude\"].value","engineConfig":{"facets":[],"mode":"row-based"},"newColumnName":"longitude","columnInsertIndex":3,"baseColumnName":"MAPBLOCKLO","expression":"grel:cell.cross(\"allegheny_county_parcel_centroids csv\", \"MAPBLOCKLO\")[0].cells[\"longitude\"].value","onError":"set-to-blank"},{"op":"core/column-addition","description":"Create column latitude at index 3 based on column MAPBLOCKLO using expression grel:cell.cross(\"allegheny_county_parcel_centroids csv\", \"MAPBLOCKLO\")[0].cells[\"latitude\"].value","engineConfig":{"facets":[],"mode":"row-based"},"newColumnName":"latitude","columnInsertIndex":3,"baseColumnName":"MAPBLOCKLO","expression":"grel:cell.cross(\"allegheny_county_parcel_centroids csv\", \"MAPBLOCKLO\")[0].cells[\"latitude\"].value","onError":"set-to-blank"}]